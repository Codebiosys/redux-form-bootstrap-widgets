// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Select Field renders 1`] = `
<SelectField
  helpText="The help Text"
  input={
    Object {
      "name": "fieldName",
      "onBlur": [Function],
      "onChange": [Function],
      "onFocus": [Function],
    }
  }
  label="Radio Test"
  meta={
    Object {
      "form": "formName",
      "pristine": false,
    }
  }
  options={
    Array [
      Object {
        "label": "Option 1",
        "value": "One",
      },
      Object {
        "label": "Option 2",
        "value": "Two",
      },
      Object {
        "label": "Option 3",
        "value": "Three",
      },
    ]
  }
>
  <FormGroup
    bsClass="form-group"
    controlId="fieldName"
  >
    <div
      className="form-group"
    >
      <Component
        label="Radio Test"
      >
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          <label
            className="control-label"
            htmlFor="fieldName"
          >
            Radio Test
          </label>
        </ControlLabel>
      </Component>
      <Select
        addLabelText="Add \\"{label}\\"?"
        arrowRenderer={[Function]}
        autoBlur={true}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={true}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={true}
        labelKey="label"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={false}
        name="fieldName"
        noResultsText="No results found"
        onBlur={[Function]}
        onBlurResetsInput={true}
        onChange={[Function]}
        onCloseResetsInput={true}
        onFocus={[Function]}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            Object {
              "label": "Option 1",
              "value": "One",
            },
            Object {
              "label": "Option 2",
              "value": "Two",
            },
            Object {
              "label": "Option 3",
              "value": "Three",
            },
          ]
        }
        pageSize={5}
        placeholder="Select..."
        required={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={false}
        tabSelectsValue={true}
        valueComponent={[Function]}
        valueKey="value"
      >
        <div
          className="Select Select--single is-clearable is-searchable"
        >
          <input
            disabled={false}
            name="fieldName"
            type="hidden"
            value=""
          />
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-2--value"
            >
              <div
                className="Select-placeholder"
              >
                Select...
              </div>
              <AutosizeInput
                aria-activedescendant="react-select-2--value"
                aria-expanded="false"
                aria-haspopup="false"
                aria-owns=""
                className="Select-input"
                minWidth="5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                value=""
              >
                <div
                  className="Select-input"
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <style
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "input#undefined::-ms-clear {display: none;}",
                      }
                    }
                  />
                  <input
                    aria-activedescendant="react-select-2--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    style={
                      Object {
                        "boxSizing": "content-box",
                        "width": "5px",
                      }
                    }
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  />
                </div>
              </AutosizeInput>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </Select>
      <HelpBlock
        bsClass="help-block"
      >
        <span
          className="help-block"
        >
          The help Text
        </span>
      </HelpBlock>
    </div>
  </FormGroup>
</SelectField>
`;

exports[`The Select Field renders allowing multiple selections 1`] = `
<SelectField
  helpText="The help Text"
  input={
    Object {
      "name": "fieldName",
      "onBlur": [Function],
      "onChange": [Function],
      "onFocus": [Function],
    }
  }
  label="Radio Test"
  meta={
    Object {
      "form": "formName",
      "pristine": false,
    }
  }
  multiple={true}
  options={
    Array [
      Object {
        "label": "Option 1",
        "value": "One",
      },
      Object {
        "label": "Option 2",
        "value": "Two",
      },
      Object {
        "label": "Option 3",
        "value": "Three",
      },
    ]
  }
>
  <FormGroup
    bsClass="form-group"
    controlId="fieldName"
  >
    <div
      className="form-group"
    >
      <Component
        label="Radio Test"
      >
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          <label
            className="control-label"
            htmlFor="fieldName"
          >
            Radio Test
          </label>
        </ControlLabel>
      </Component>
      <Select
        addLabelText="Add \\"{label}\\"?"
        arrowRenderer={[Function]}
        autoBlur={true}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={true}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={true}
        labelKey="label"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={true}
        name="fieldName"
        noResultsText="No results found"
        onBlur={[Function]}
        onBlurResetsInput={true}
        onChange={[Function]}
        onCloseResetsInput={true}
        onFocus={[Function]}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            Object {
              "label": "Option 1",
              "value": "One",
            },
            Object {
              "label": "Option 2",
              "value": "Two",
            },
            Object {
              "label": "Option 3",
              "value": "Three",
            },
          ]
        }
        pageSize={5}
        placeholder="Select..."
        required={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={false}
        tabSelectsValue={true}
        valueComponent={[Function]}
        valueKey="value"
      >
        <div
          className="Select Select--multi is-clearable is-searchable"
        >
          <input
            disabled={false}
            name="fieldName"
            type="hidden"
            value=""
          />
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-21--value"
            >
              <div
                className="Select-placeholder"
              >
                Select...
              </div>
              <AutosizeInput
                aria-activedescendant="react-select-21--value"
                aria-expanded="false"
                aria-haspopup="false"
                aria-owns=""
                className="Select-input"
                minWidth="5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                value=""
              >
                <div
                  className="Select-input"
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <style
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "input#undefined::-ms-clear {display: none;}",
                      }
                    }
                  />
                  <input
                    aria-activedescendant="react-select-21--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    style={
                      Object {
                        "boxSizing": "content-box",
                        "width": "5px",
                      }
                    }
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  />
                </div>
              </AutosizeInput>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </Select>
      <HelpBlock
        bsClass="help-block"
      >
        <span
          className="help-block"
        >
          The help Text
        </span>
      </HelpBlock>
    </div>
  </FormGroup>
</SelectField>
`;

exports[`The Select Field renders with async options 1`] = `
<SelectField
  helpText="The help Text"
  input={
    Object {
      "name": "fieldName",
      "onBlur": [Function],
      "onChange": [Function],
      "onFocus": [Function],
    }
  }
  label="Radio Test"
  loadOptions={[Function]}
  meta={
    Object {
      "form": "formName",
      "pristine": false,
    }
  }
>
  <FormGroup
    bsClass="form-group"
    controlId="fieldName"
  >
    <div
      className="form-group"
    >
      <Component
        label="Radio Test"
      >
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          <label
            className="control-label"
            htmlFor="fieldName"
          >
            Radio Test
          </label>
        </ControlLabel>
      </Component>
      <Async
        autoBlur={true}
        autoload={true}
        cache={Object {}}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        joinValues={true}
        loadOptions={[Function]}
        loadingPlaceholder="Loading..."
        multi={false}
        name="fieldName"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        options={Array []}
        searchPromptText="Type to search"
        valueKey="value"
      >
        <Select
          addLabelText="Add \\"{label}\\"?"
          arrowRenderer={[Function]}
          autoBlur={true}
          autoload={true}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          cache={Object {}}
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={true}
          closeOnSelect={true}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={Object {}}
          isLoading={false}
          joinValues={true}
          labelKey="label"
          loadOptions={[Function]}
          loadingPlaceholder="Loading..."
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={false}
          name="fieldName"
          noResultsText="Type to search"
          onBlur={[Function]}
          onBlurResetsInput={true}
          onChange={[Function]}
          onCloseResetsInput={true}
          onFocus={[Function]}
          onInputChange={[Function]}
          onSelectResetsInput={true}
          openOnClick={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "one",
                "value": 1,
              },
              Object {
                "label": "two",
                "value": 2,
              },
              Object {
                "label": "three",
                "value": 3,
              },
            ]
          }
          pageSize={5}
          placeholder="Select..."
          required={false}
          scrollMenuIntoView={true}
          searchPromptText="Type to search"
          searchable={true}
          simpleValue={false}
          tabSelectsValue={true}
          valueComponent={[Function]}
          valueKey="value"
        >
          <div
            className="Select Select--single is-clearable is-searchable"
          >
            <input
              disabled={false}
              name="fieldName"
              type="hidden"
              value=""
            />
            <div
              className="Select-control"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <span
                className="Select-multi-value-wrapper"
                id="react-select-17--value"
              >
                <div
                  className="Select-placeholder"
                >
                  Select...
                </div>
                <AutosizeInput
                  aria-activedescendant="react-select-17--value"
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-owns=""
                  className="Select-input"
                  minWidth="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  value=""
                >
                  <div
                    className="Select-input"
                    style={
                      Object {
                        "display": "inline-block",
                      }
                    }
                  >
                    <style
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "input#undefined::-ms-clear {display: none;}",
                        }
                      }
                    />
                    <input
                      aria-activedescendant="react-select-17--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      style={
                        Object {
                          "boxSizing": "content-box",
                          "width": "5px",
                        }
                      }
                      value=""
                    />
                    <div
                      style={
                        Object {
                          "height": 0,
                          "left": 0,
                          "overflow": "scroll",
                          "position": "absolute",
                          "top": 0,
                          "visibility": "hidden",
                          "whiteSpace": "pre",
                        }
                      }
                    />
                  </div>
                </AutosizeInput>
              </span>
              <span
                className="Select-arrow-zone"
                onMouseDown={[Function]}
              >
                <span
                  className="Select-arrow"
                  onMouseDown={[Function]}
                />
              </span>
            </div>
          </div>
        </Select>
      </Async>
      <HelpBlock
        bsClass="help-block"
      >
        <span
          className="help-block"
        >
          The help Text
        </span>
      </HelpBlock>
    </div>
  </FormGroup>
</SelectField>
`;

exports[`The Select Field renders with custom options 1`] = `
<SelectField
  helpText="The help Text"
  input={
    Object {
      "name": "fieldName",
      "onBlur": [Function],
      "onChange": [Function],
      "onFocus": [Function],
    }
  }
  label="Radio Test"
  labelKey="foo"
  meta={
    Object {
      "form": "formName",
      "pristine": false,
    }
  }
  options={
    Array [
      Object {
        "bar": "One",
        "foo": "Option 1",
      },
      Object {
        "bar": "Two",
        "foo": "Option 2",
      },
      Object {
        "bar": "Three",
        "foo": "Option 3",
      },
    ]
  }
  valueKey="bar"
>
  <FormGroup
    bsClass="form-group"
    controlId="fieldName"
  >
    <div
      className="form-group"
    >
      <Component
        label="Radio Test"
      >
        <ControlLabel
          bsClass="control-label"
          srOnly={false}
        >
          <label
            className="control-label"
            htmlFor="fieldName"
          >
            Radio Test
          </label>
        </ControlLabel>
      </Component>
      <Select
        addLabelText="Add \\"{label}\\"?"
        arrowRenderer={[Function]}
        autoBlur={true}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={true}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={true}
        labelKey="foo"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={false}
        name="fieldName"
        noResultsText="No results found"
        onBlur={[Function]}
        onBlurResetsInput={true}
        onChange={[Function]}
        onCloseResetsInput={true}
        onFocus={[Function]}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            Object {
              "bar": "One",
              "foo": "Option 1",
            },
            Object {
              "bar": "Two",
              "foo": "Option 2",
            },
            Object {
              "bar": "Three",
              "foo": "Option 3",
            },
          ]
        }
        pageSize={5}
        placeholder="Select..."
        required={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={false}
        tabSelectsValue={true}
        valueComponent={[Function]}
        valueKey="bar"
      >
        <div
          className="Select Select--single is-clearable is-searchable"
        >
          <input
            disabled={false}
            name="fieldName"
            type="hidden"
            value=""
          />
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-15--value"
            >
              <div
                className="Select-placeholder"
              >
                Select...
              </div>
              <AutosizeInput
                aria-activedescendant="react-select-15--value"
                aria-expanded="false"
                aria-haspopup="false"
                aria-owns=""
                className="Select-input"
                minWidth="5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                value=""
              >
                <div
                  className="Select-input"
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <style
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "input#undefined::-ms-clear {display: none;}",
                      }
                    }
                  />
                  <input
                    aria-activedescendant="react-select-15--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    style={
                      Object {
                        "boxSizing": "content-box",
                        "width": "5px",
                      }
                    }
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  />
                </div>
              </AutosizeInput>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </Select>
      <HelpBlock
        bsClass="help-block"
      >
        <span
          className="help-block"
        >
          The help Text
        </span>
      </HelpBlock>
    </div>
  </FormGroup>
</SelectField>
`;
